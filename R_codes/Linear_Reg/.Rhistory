if(num1 == num2[1,]) == TRUE){
return(TRUE)
}else{
return(FALSE)
}
}
num_check1 = function(num1,num2){
for(i in length(num2)){
if(num1 == num2[1,]) == TRUE){
return(TRUE)
}else{
return(FALSE)
}
}
num_check1 = function(num1,num2){
for(i in length(num2)){
if(num1 == num2[1,]) == TRUE){
return(TRUE)
}else{
return(FALSE)
}
}
num_check1 = function(num1,num2){
for(num1 in length(num2)){
if(num1 == num2[1,]) {
return(TRUE)
}else{
return(FALSE)
}
}
}
num_check1(5,c(1,2,3,4,6))
num_check1 = function(num1,num2){
for(num1 in length(num2)){
if(num1 == num2) {
return(TRUE)
}else{
return(FALSE)
}
}
}
num_check1(5,c(1,2,3,4,6))
num_check1(5,c(1,2,3,4,6,5))
num_check1 = function(num1,num2){
for(num1 in length(num2)){
if(num1 == num2) {
return(TRUE)
}else{
return(FALSE)
}
}
}
num_check1 = function(num1,num2){
for(num1 in length(num2)){
num_check1 = function(num1,num2){
i = 0
for(num1 in length(num2)){
if(num1 == num2[i]) {
return(TRUE)
}else{
return(FALSE)
}
i = i + 1
}
}
num_check1(5,c(1,2,3,4,6,5))
num_check1 = function(num1,num2){
i = 1
for(num1 in length(num2)){
if(num1 == num2[i]) {
return(TRUE)
}else{
return(FALSE)
}
i = i + 1
}
}
num_check1(5,c(1,2,3,4,6,5))
num_check1 = function(num1,num2){
i = 1
for(num1 in length(num2)){
if(num1 == num2[i]) {
r <- TRUE
}else{
r <- FALSE
}
i = i + 1
}
if(r = TRUE)
print('TRUE')
num_check1 = function(num1,num2){
i = 1
for(num1 in length(num2)){
if(num1 == num2[i]) {
r <- TRUE
}else{
r <- FALSE
}
i = i + 1
if(r = TRUE)
return(TRUE)
}
return(FALSE)
}
num_check1 = function(num1,num2){
i = 1
for(num1 in length(num2)){
if(num1 == num2[i]) {
r <- TRUE
}else{
r <- FALSE
}
i = i + 1
if(r == TRUE)
return(TRUE)
}
return(FALSE)
}
num_check1(5,c(1,2,3,4,6,5))
num_check1(5,c(5,1,2,3,4,6))
num_check1 = function(num1,num2){
i = 1
for(k in length(num2)){
if(num1 == num2[i]) {
r <- TRUE
}else{
r <- FALSE
}
i = i + 1
if(r == TRUE)
return(TRUE)
}
return(FALSE)
}
num_check1(5,c(5,1,2,3,4,6))
num_check1(5,c(1,2,3,4,6,5))
num_check1 = function(num1,num2){
i = 1
for(i in length(num2)){
if(num1 == num2[i]) {
r <- TRUE
}else{
r <- FALSE
}
i = i + 1
if(r == TRUE)
return(TRUE)
}
return(FALSE)
}
num_check1(5,c(1,2,3,4,6,5))
num_check1(5,c(1,2,3,4,6,7))
num_check1(5,c(1,2,3,4,6,7,5))
num_count = function(num1,num2){
i = 1
for(i in length(num2)){
if(num1 == num2[i]) {
r <- TRUE
}else{
r <- FALSE
}
i = i + 1
if(r == TRUE)
x
}
return(FALSE)
}
num_count = function(num1,num2){
i = 1
x = 0
for(i in length(num2)){
if(num1 == num2[i]) {
r <- TRUE
}
i = i + 1
if(r == TRUE)
x = x + 1
}
return(x)
}
num_count(5,c(1,2,3,4,6,7,5))
num_count(5,c(1,2,5,3,4,5,6,7,5))
num_count = function(num1,num2){
i = 1
x = 0
for(i in length(num2)){
if(num1 == num2[i]) {
x <- x + 1
}
i = i + 1
}
return(x)
}
num_count(5,c(1,2,5,3,4,5,6,7,5))
num_count = function(num1,num2){
x = 0
for(i in length(num2)){
if(i == num1) {
x <- x + 1
}
}
return(x)
}
num_count(5,c(1,2,5,3,4,5,6,7,5))
num_count = function(num1,num2){
x = 0
for(i in num2){
if(i == num1) {
x <- x + 1
}
}
return(x)
}
num_count(5,c(1,2,5,3,4,5,6,7,5))
num_check1(5, c(1,5,1))
num_check1 = function(num1,num2){
for(i in num2){
if(i == num1) {
return(TRUE)
}
return(FALSE)
}
num_check1(5, c(1,5,1))
}
num_check1(5, c(1,5,1))
num_check1 = function(num1,num2){
for(i in num2){
if(i == num1)
return(TRUE)
return(FALSE)
}
}
num_check1(5, c(1,5,1))
num_check1 = function(num1,num2){
for(i in num2){
if(i == num1){
return(TRUE)
}
return(FALSE)
}
}
num_check1(5, c(1,5,1))
num_check1 = function(num1,num2){
for(i in num2){
if(i == num1){
return(TRUE)
}
}
return(FALSE)
}
num_check1(5, c(1,5,1))
bar_count <- function(n){
if(n % 5 == 0)
bar_count <- function(n){
if(n >= 5){
a <- n % 5
b <- n / 5
c = a + b
}
}
n <-23
n % 5
n %% 5
bar_count <- function(n){
if(n >= 5){
a <- n %% 5
b <- n / 5
c = a + b
}
}
bar_count(12)
bar_count <- function(n){
if(n >= 5){
a <- n %% 5
b <- n / 5
c = a + b
}
return(c)
}
bar_count(12)
12/5
bar_count <- function(n){
if(n >= 5){
a <- n %% 5
b <- n / 5
c = a + b
}
return(round(c))
}
bar_count(12)
bar_count(54)
bar_count(17)
bar_count(3)
bar_count <- function(n){
a <- n %% 5
b <- n / 5
c = a + b
return(round(c))
}
bar_count(3)
4 %% 5
3 %% 5
3/5
bar_count <- function(n){
if(n >= 5){
a <- n %% 5
b <- n / 5
c = a + b
}else{
c = n
}
return(round(c))
}
bar_count(3)
bar_count(4)
bar_count(5)
summer <- function(x,y,z){
if(x %% 3 == 0){
x = 0
}if(y %% 3 == 0){
summer <- function(x,y,z){
if(x %% 3 == 0){
x = 0
}if(y %% 3 == 0){
y = 0
}if(z %% 3 == 0){
z = 0
}
return(x+y+z)
}
summer <- function(x,y,z){
if(x %% 3 == 0)
x = 0
if(y %% 3 == 0)
y = 0
if(z %% 3 == 0){
z = 0
}
return(x+y+z)
}
summer(1,2,5)
summer(1,2,3)
summer(3,6,9)
summer(9,11,12)
prime_check <- function(n){
}
prime_check <- function(n){
if(n %% any(1:1000) == 0)
}
?any
:
prime_check <- function(num) {
if (num == 2) {
return(TRUE)
} else if (any(num %% 2:(num-1) == 0)) {
return(FALSE)
} else {
return(TRUE)
}
}
prime_check(9)
example("any")
?:
prime_check(21)
install.packages('nycflights13')
library(nycflights13)
head(flights)
head(flights, flights$month == 11 & flights$day == 3 & flights$carrier == 'AA')
subset(flights,subset =  flights$month == 11 & flights$day == 3 & flights$carrier == 'AA')
head(flights[ flights$month == 11 & flights$day == 3 & flights$carrier == 'AA'])
head(flights [flights$month == 11 & flights$day == 3 & flights$carrier == 'AA',])
filter(mtcars,mtcars$mpg > 20 & mtcars$cyl > 6)
head(filter(mtcars,mtcars$mpg > 20 & mtcars$cyl > 6))
head(filter(mtcars,mpg > 20 , cyl > 6))
mtcars
head(filter(mtcars, mpg > 20, cyl > 6))
head(filter(mtcars, mpg > 20, mtcars$cyl > 6))
library(dplyr)
head(filter(mtcars, mpg > 20, cyl > 6))
head(mtcars)
head(filter(mtcars, mpg >= 20, cyl >= 6))
?arrange
example("arrange")
arrange(mtcars, cyl, desc(wt))
head(arrange(mtcars, cyl, desc(wt)))
head(round(arrange(mtcars, cyl, desc(wt))))
head(select(mtcars, mpg, hp))
distinct(select(mtcars,gear))
cbind(mtcars, perfomance = hp/wt)
cbind(mtcars, perfomance = mtcarshp/wt)
head(mutate(mtcars, performance = hp/wt))
summarise(mtcars, avg_mpg = mean(mpg, na.rm = TRUE))
summarise(mtcars, std_hp = mean(hp & cyl == 6, na.rm = TRUE))
summarise(mtcars, std_hp = mean(hp == . & cyl == 6, na.rm = TRUE))
summarise(mtcars, std_hp = mean(hp < 40 & cyl == 6, na.rm = TRUE))
mtcars %>% filter(cyl == 6) %>% summarise(std_hp = mean(hp))
mtcars %>% filter(cyl == 6) %>% summarise(avg_hp = mean(hp))
prime_check <- function(num) {
if (num == 2) {
return(TRUE)
} else if (any(num %% 2&(num-1) == 0)) {
return(FALSE)
} else {
return(TRUE)
}
}
prime_check(1)
prime_check(111)
prime_check <- function(num) {
if (num == 2) {
return(TRUE)
} else if (any(num %% 2 : (num-1) == 0)) {
return(FALSE)
} else {
return(TRUE)
}
}
prime_check(111)
prime_check <- function(num) {
if (num == 2) {
return(TRUE)
} else if (any(num %% 2 | (num-1) == 0)) {
return(FALSE)
} else {
return(TRUE)
}
}
prime_check(111)
prime_check(7)
prime_check <- function(num) {
if (num == 2) {
return(TRUE)
} else if (any(num %% 2 : (num-1) == 0)) {
return(FALSE)
} else {
return(TRUE)
}
}
prime_check(7)
mtcars %>% filter(cyl==6) %>% summarise(avg_hp = mean(hp))
google <- c(450, 451, 452,445, 468)
Microsoft <- c(230, 231, 231, 236, 228)
stocks <- c(google, microsoft)
stocks <- c(google, Microsoft)
stocks
stocks.matrix <- matrix(stocks, nrow = 2)
stocks.matrix
stocks.matrix <- matrix(stocks, nrow = 2, byrow = TRUE)
stocks.matrix
colnames(stocks.matrix) <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri')
stocks.matrix
rownames(stocks.matrix) <- c('Google', 'Microsoft')
stocks.matrix
colSums(stocks.matrix)
rowSums(stocks.matrix)
Fb <- c(111,112,115,120,145)
rbind(stocks.matrix, Fb)
avg <- rowMeans(stocks.matrix)
avg
stocks.matrix <- rbind(stocks.matrix, Fb)
avg <- rowMeans(stocks.matrix)
avg
stoks.matrix <- cbind(stocks.matrix, avg)
stocks.matrix
stocks.matrix <- cbind(stocks.matrix, avg)
stocks.matrix
stock.stocks[3]
stocks.matrix[3]
stocks.matrix[3,]
stocks.matrix[-3,]
stocks.matrix[,-5]
data()
mtcars
head(mtcars,3)
head(mtcars)
mtcars[3,]
mtcars[1:3,]
head(mtcars)
tail(mtcars,8)
tail(mtcars)
str(iris)
str(mtcars)
a = 2
b <- 3
c <- a + b
c
install.packages("caTools")
setwd("C:/Users/prade/OneDrive/Documents/R codes")
Lr_data <- read.csv('Salary_Data.csv')
library(caTools)
split_data <- sample.split(Lr_data, SplitRatio = 2/3)
training_set <- subset(Lr_data, split_data == TRUE)
test_set <- subset(Lr_data, split_data == FALSE)
reg <- lm(Salary ~ training_set)
y_pred <- predict(reg,test_set)
setwd("C:/Users/prade/OneDrive/Documents/R codes")
Lr_data <- read.csv('Salary_Data.csv')
library(caTools)
split_data <- sample.split(Lr_data, SplitRatio = 2/3)
training_set <- subset(Lr_data, split_data == TRUE)
test_set <- subset(Lr_data, split_data == FALSE)
reg <- lm(Salary ~ training_set)
y_pred <- predict(reg,test_set)
setwd("C:/Users/prade/OneDrive/Documents/R codes")
Lr_data <- read.csv('Salary_Data.csv')
library(caTools)
split_data <- sample.split(Lr_data, SplitRatio = 2/3)
training_set <- subset(Lr_data, split_data == TRUE)
test_set <- subset(Lr_data, split_data == FALSE)
reg <- lm(Salary ~ YearsExperience, training_set)
y_pred <- predict(reg,test_set)
y_pred
